dPrep - Opening lecture
========================================================
author: Hannes Datta
date: 
autosize: true

<!--#

https://support.rstudio.com/hc/en-us/articles/200486468
-->

Welcome to dPrep!
========================================================

We're about to start with the first lecture of this class.

If you haven't done so, please 

- explore the **course page** at [https://dprep.hannesdatta.com]().
- complete the **software installation** (https://dprep.hannesdatta.com/docs/modules/prep/)
- my slides are available here: https://dprep.hannesdatta.com/docs/modules/week1

<!--
- drafted this course for a very long time
- finally got the chance to teaching it now
- what is it about: radical change in the way to work on data-intensive projects
- anything you've learnt so far is about stats, or substantive areas, not about HOW to work on projects
- happy to share that vision, and share practical tips
-->


Agenda
========================================================

- Part 1 (10.45 to about 11.45)
  - Meeting each other!
  - Motivation for the course
  - Course framework and learning goals
  - Agenda and practical arrangements
- Break
- Part 2: R Bootcamp on your laptops (about 12.00 - 13.30/13.45)


<!--
continue with course motivation
-->


Disclaimer
========================================================
incremental: true

- Minimal (use of) slides - use Ctrl/Cmd + or - to zoom in/out in your browser
- Recording sessions (no editing, do remind me to post, please)
- You will have to invest a lot of time and energy
- Mix of lectures, team work and self-study -- all are necessary
- Consider me your coach, not your distant professor
- Slow me down (yes, that's needed!)

Research and teaching (all openly available)
========================================================

- Research on digital media and branding (https://hannesdatta.com)
- __Tilburg Science Hub (https://tilburgsciencehub.com)__
- Tilburg.ai (https://tilburg.ai)
- Teaching ([thesis supervision](https://thesis.hannesdatta.com), [oDCM](https://odcm.hannesdatta.com))
- YouTube channel (https://youtube.com/c/hannesdatta), LinkedIn (https://linkedin.com/in/hannesdatta)
- My public code (https://github.com/hannesdatta)


Getting to know your programming skills...
========================================================
incremental: true

- Who's ever used R? (Share your wildest R moment...!)
- Ever wrangled with messy data? How did you clean it up? Did you team up or go solo?
- Imagine your dream job ??? what is it going to be?


Motivation for course (I)
========================================================

- did my PhD in quantitative marketing
- coded a lot (data preperation, statistical modeling), but didn't *learn how to structure my work*
- created a [complete chaos](https://tilburgsciencehub.com/topics/Automation/Workflows/Starting/principles-of-project-setup-and-workflow-management/structure_phd_2013) (but still [got published](https://doi.org/10.1509%2Fjmr.12.0160))

Motivation for course (II)
========================================================

- Cannot find code that prepped the data set
- Cannot find code of the econometric model that eventually got published

What was so bad about it?
========================================================

- Replicability
    - I couldn't replicate results whenever I wanted to
- Reproducibility
    - My peers didn't really understand how I did things - so they also couldn't implement similar designs to test effects
- Efficiency
    - when making changes to data, I had to go the the beginning, repeating all steps
    - a colleague asked me for the data years after; it wasn't properly documented!

Why should you care?
========================================================

- You will soon work on data-intensive projects - whether at University (e.g., thesis) or in business
- You will change code *continuously* before a project is final
- Team members or colleagues will look at and use your code
    - to help you
    - to take over your work
- Learning 'good coding practices' is a costly investment (time/effort), but...
- Small __efficiency__ gains will pay off soon!

What's efficient?
========================================================
incremental: true

- develop and prototype the "final pipeline" of your project, refine later
- reduce setup costs to return to a project (e.g., finding relevant files, getting your code to work)
- reduce coding mistakes (or catching them at all!)
- rotating and collaborating on tasks (e.g., team members taking over)
- sharing/reusing code (e.g., in so-called "packages" or "libraries")
- receiving feedback from others

What's not efficient?
========================================================
incremental: true

- Waiting (e.g., for results, for data to be prepped)
- Getting distracted while waiting
- Forgetting how things *were* done/implemented (and why)
- Losing data
- Using code which isn't properly documented ("don't know how to use it")
- Becoming frustrated, feeling lost

Course objectives (I): Develop your coding skills
========================================================

1) Use R to clean and transform data for analysis (e.g., aggregation, merging, de-duplication, reshaping, data conversions, regular expressions)
  - Engineer complex data sets using [tidyverse/dplyr](https://dprep.hannesdatta.com/docs/modules/week4/tutorial/tutorial.html)

2) Use R for generating automatic reports (e.g., to assess data quality, to report research findings in a paper) and deploying research findings in novel ways (e.g., apps)
  - Produce good-looking documents in [RMarkdown](https://dprep.hannesdatta.com/docs/modules/week3/tutorial/intro-to-r.html) rather than ugly, non-readable docs
  - Program [apps to showcast research results](https://tilburgsciencehub.com/try/shiny-app)

Course objectives (II): Collaborate on research projects using GitHub (1/2)
========================================================

1) collaborate with others on projects
  - e.g., check the issue page at https://github.com/tilburgsciencehub/website/issues

2) document your own code, and use unlimited version history
  - e.g., check out [how a project looked like a while ago
  - e.g., clean up stuff (because you can roll back anyways!)

*a few examples*
- https://github.com/hannesdatta/brand-equity-journal-of-marketing
- https://github.com/hannesdatta/spotify-playlist-clustering
- even this class: https://github.com/hannesdatta/course-dprep

Course objectives (III): Automate your research pipeline
========================================================

- create and run portable, automated, and reproducible data pipelines

*a few examples*

- automated text mining workflow
  - https://tilburgsciencehub.com/practice/pipeline-automation
- start new projects from templates
  - https://tilburgsciencehub.com/examples/reproducible-workflow-airbnb/

  
Tips & tricks
========================================================

- Take time to become acquainted with the format of the course (e.g., public website for course material, Canvas for submissions)
- Can be tough at first, but you will become more experienced rapidly!
-	Start preparing early on! (The first weeks will be the most challenging!)
-	Have the same group members across courses, mix skill levels
-	Collaborate with each other and try to help one another!

Course structure
========================================================

- Skill building (weeks 1-5)
  - On-campus tutorial (Hannes), followed by coaching sessions for feedback & activities (Roshini)
  - Self-study (readings, tutorials)
<br>
- Project phase (weeks __2__-7)
  - Apply skills in a team project
  - Evolves gradually as your skills improve
  - Building blocks / code snippets used to customize projects

Course framework
========================================================

![Course framework](dprep_framework.png)


Course website
========================================================

Visit [https://dprep.hannesdatta.com]()!

- it's freely available - spread the word
- Course website is your #1 resource, Canvas only used for
  - posting important announcements,
  - sign up for teams, and
  - submitting data challenges/projects
- do all students have Canvas access?


Project
========================================================

- build a __research pipeline__
  - download data - prepare for analysis - run analysis - report
  - based on public data from Yelp and IMDb, specifics see [course page]((https://dprep.hannesdatta.com/docs/project/data/)
- team requirements
  - five persons (mix expertise if possible), register on Canvas by early next week (not less - change of dropout is high!)
  - you can keep previous grade (repeater) - still register on Canvas (!)
- evaluation
  - self- and peer assessment (own versus team performance)
  - grading rubric available on the course website

Project coaching
========================================================

- teams meet on campus 
  - during scheduled coaching class hours
  - except in the last two weeks (online feedback in breakout rooms)
- coach (Roshini) meets all teams for a check-in moment (first 45m); then walks around and addresses (remaining) questions

Tutorials
========================================================

- four __key__ tutorials
  - explore new data using RMarkdown 
  - learn how to collaborate on code using GitHub
  - prepare datasets for analysis
  - automate workflows using `make`
- build skills using courses on [datacamp.com]() (get access - see links on site and Canvas) and Software Carpentry

<br>
__skill building requires time, effort *and* (human!) feedback__, but is highly valued on the job market


Grading
========================================================

- Team project (40%)
  - with self- and peer assessment
  - hand in via GitHub
- Computer exam (60%) on campus, no internet
  - mix of open (free-flowing answers) and closed questions (multiple choice)
  - elaborate [preview of exam + example questions](https://dprep.hannesdatta.com/docs/exam) available on the course website

<!--
::: notes

* Exam: Both multiple choice and open questions (you can't pass this course if you don't learn programming  make sure you actively participate in the team project so that you can replicate it individually)
- more specs on exam later

:::
-->

Brain-dead by coding
========================================================

- Coding can be extremely frustrating if you're starting out
- I tend to become semi-"brain-dead" after a day of coding
- Take breaks! Stop coding. Go for a run. Start again.
- You will learn from your mistakes
- Use cheat sheets and our support section.

&#8594; quick feedback loops in first few weeks


Getting support
========================================================

- Course chatbot in collaboration with tilburg.ai (see https://dprep.tilburgai.nl)
- Text me instead? Please use WhatsApp: +31 13 466 8938.

![WhatsApp](wa_qr.jpeg)

- Email is usually much slower
- Check out the course's support section


What's in for you?
========================================================
incremental: true

- Enhanced data analysis abilities: knowing the latest packages
- Competitive advantage: everyone learns R, barely anyone learns GitHub and automation skills (but, they are so useful)
- Efficient collaboration: we focus also on project management - making you more productive in the future
- Reproducible workflows: saves time, enhances data quality and accuracy
- Potential for follow-ups here in Tilburg and beyond

Success factors
========================================================

At the end of this course, what would make you say...

__"This was actually worth it... !!!"?__


<!--
::: notes

(for me): become more efficient, use Tilburg Science Hub, give me feedback

:::
-->

Next steps
========================================================

- Find a group by week 2 (max. 5 students, min. 4; please "mix" by experience with R!) - no need to start working already (talk to others during the break to meet up)
- Got Datacamp access? [Enroll now](https://dprep.hannesdatta.com/docs/course/support/datacamp/)
- Complete the [software installation](https://dprep.hannesdatta.com/docs/modules/prep)
- Get GitHub Education Pack (+ why!)

<br>
<br>

After a well-deserved break, we continue with the **R bootcamp**.

